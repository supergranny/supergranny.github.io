<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regression | Julian Faraway</title>
    <link>https://julianfaraway.github.io/tag/regression/</link>
      <atom:link href="https://julianfaraway.github.io/tag/regression/index.xml" rel="self" type="application/rss+xml" />
    <description>regression</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 09 Oct 2015 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://julianfaraway.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>regression</title>
      <link>https://julianfaraway.github.io/tag/regression/</link>
    </image>
    
    <item>
      <title>Plotting Regression Datasets</title>
      <link>https://julianfaraway.github.io/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://julianfaraway.github.io/post/2015-07-23-r-rmarkdown/</guid>
      <description>


&lt;p&gt;Consider a regression dataset with a response and several predictors. You want a single plot showing the response plotted against each of the predictors. You could use the pairs() but that also shows plots between the predictors. If there are more than a few predictors, there are too many plots to see any one of them clearly. Here’s a simple solution:&lt;/p&gt;
&lt;p&gt;Here’s an example dataset:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(swiss)
             Fertility Agriculture Examination Education Catholic
Courtelary        80.2        17.0          15        12     9.96
Delemont          83.1        45.1           6         9    84.84
Franches-Mnt      92.5        39.7           5         5    93.40
Moutier           85.8        36.5          12         7    33.77
Neuveville        76.9        43.5          17        15     5.16
Porrentruy        76.1        35.3           9         7    90.57
             Infant.Mortality
Courtelary               22.2
Delemont                 22.2
Franches-Mnt             20.2
Moutier                  20.3
Neuveville               20.6
Porrentruy               26.6&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now reorganise the data using the tidyr package so that there is one (x,y) pair on each line:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyr)
rdf &amp;lt;- gather(swiss, variable, value, -Fertility)
head(rdf)
  Fertility    variable value
1      80.2 Agriculture  17.0
2      83.1 Agriculture  45.1
3      92.5 Agriculture  39.7
4      85.8 Agriculture  36.5
5      76.9 Agriculture  43.5
6      76.1 Agriculture  35.3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use ggplot2 to plot the response against each of the predictors (which are on different scales so
we need to allow for that)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
ggplot(rdf, aes(x=value,y=Fertility)) + geom_point() + facet_wrap(~ variable, scale=&amp;quot;free_x&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://julianfaraway.github.io/post/2015-07-23-r-rmarkdown_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can elaborate as needed.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
